name: CI
on:
  - push
  - pull_request
  - workflow_dispatch
jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
          # This must match what's in versions.sh (Meteor 3.2+ only)
          - '3.2'
          - '3.3'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build (single architecture for testing)
      run: ./build.sh
      env:
        CI_VERSION: ${{ matrix.version }}

    - name: Test
      run: ./test.sh
      env:
        CI_VERSION: ${{ matrix.version }}
        SKIP_CLEANUP: 1

    - name: Login to Docker Hub
      if: ${{ github.ref == 'refs/heads/main' }}
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PERSONAL_ACCESS_TOKEN }}

    - name: Build and Push multi-architecture Docker image
      if: ${{ github.ref == 'refs/heads/main' }}
      run: |
        # Build and push multi-architecture image
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --build-arg "METEOR_VERSION=${{ matrix.version }}" \
          --tag productiveme/meteor-base:${{ matrix.version }} \
          --push \
          ./src
        
        # Also tag as latest if this is the latest version
        if [[ "${{ matrix.version }}" == "3.3" ]]; then
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --build-arg "METEOR_VERSION=${{ matrix.version }}" \
            --tag productiveme/meteor-base:latest \
            --push \
            ./src
        fi

    - name: Test
      run: ./test.sh
      env:
        CI_VERSION: ${{ matrix.version }}
        SKIP_CLEANUP: 1

    - name: Login to Docker Hub
      if: ${{ github.ref == 'refs/heads/main' }}
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PERSONAL_ACCESS_TOKEN }}

    - name: Push Docker image
      if: ${{ github.ref == 'refs/heads/main' }}
      run: ./push.sh
      env:
        CI_VERSION: ${{ matrix.version }}
